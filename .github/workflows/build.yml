name: Installer Image CI

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: "Build and Push"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: azure/setup-helm@v3

      - name: Set common variables
        id: variables
        run: |
          echo "version=${REF_NAME#v}" >> $GITHUB_OUTPUT
        env:
          REF_NAME: "${{ github.ref_name }}"

      - name: Lint Chart
        id: lint_chart
        env:
          version: "${{ steps.variables.outputs.version }}"
        run: |
          helm lint ./chart

          code=0
          if [[ "$(yq '.version' < ./chart/Chart.yaml)" != "${version}" ]]; then
            echo "Chart's version should be $version"
            code=1
          fi

          if [[ "$(yq '.appVersion' < ./chart/Chart.yaml)" != "${version}" ]]; then
            echo "Chart's appVersion should be $version"
            code=1
          fi

          if [[ "$(yq '.image.tag' < ./chart/values.yaml)" != "" && "$(yq '.image.tag' < ./chart/values.yaml)" != "${version}" ]]; then
            echo "Chart's default value for 'image.tag' should be empty or $version"
            code=1
          fi

          if [[ $code -ne 0 ]]; then
            echo "Version linting failed, please fix and push tag again"
            exit 1
          fi

      - name: Login to ghcr
        if: ${{ false }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker - Metadata
        if: ${{ false }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            ${{ steps.variables.outputs.version }}-{{ sha }}
            ${{ steps.variables.outputs.version }}

      - name: Docker - Build and Push
        if: ${{ false }}
        uses: docker/build-push-action@v4
        with:
          context: ./image
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SHIM_VERSION=${{ steps.variables.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: clear local credentials
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
          rm -f ${HOME}/.config/helm/registry/config.json
